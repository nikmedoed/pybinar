// Пример параметров для запуска "pybinar.py":
// exampleinput.txt /rfolder #

		// Двойные слэши используются для комментариев, все символы за ними и до конца строки игнорируются
		// Лишние пробелы и пустые строки игнорируются
		// Блоки могут располагаться в случайном порядке, но внутри блока поля должны идти по заданному порядку
		// Блок начинается с ключевого слова

		//----------------------------------------------------------------
		// Имя/путь входного файла с описанием структуры (параметры ячейки, координаты атомов)

Name:
NaCl.cif

		//----------------------------------------------------------------
		// Условия задачи
		// 2 2 2	// трансляции
		// 0		// Номер генератора псевдослучайных величин для определения замещаемых атомов: 0 - Стандартный, 1 - Генератор 1 (найду позже), 2 - ..., в перспективе своя формула тоже возможна
		// _ 		// Параметр рандомизации - любая комбинация символов, либо "TIME", чтобы взять текущее время
		// X > X1(p) 1	// Перечисление правил вбрасывания (любое количество строк): "Атом для замены" > "внедряемый атом"(заряд внедряемого атома) количество внедрений

Сonditions:
4 4 4	// трансляции
0		// номер генератора
TIME		// параметр рандомизации 
Na > K1(1.5) 96 
Na > K2(1.5) 10 

		//----------------------------------------------------------------
		// Ограничения
		// 20		// ограничение по времени в мин. для итераций сл.вбрасываний. Также можно использовать формат чччч:мм:сс, т.е. 12:31:23 или чччч:мм
		// 3.0		// радиус координационной сферы(в ангстремах)!!!!
		// 0		// направление хи-квадрат: 1-на возрастание, 0 - на убывание
		// 0.1		// граница хи-квадрат (stop если достигается эта величина) 

Сonstraints:
30		// ограничение времени 
4.2		// радиус сферы
0		// направление χ²
0.1		// ограничение χ² - stop 

		//----------------------------------------------------------------
		// Параметры вывода
		// 10.0		// границы хи-квадрат( в % ), с кот. начинается выдача данных для GULP. либо ДВА числа через пробел (границы), либо ОДНО для задания отрезка от этого числа до 0 или 100 в зависимости от направления хи-квадрат
		// 1 		// n, чтобы выводить каждую n-ую попадающую в границы хи-квадрат модификацию. Оставьте пустым, чтобы не выводить. Для каждого вывода будет создан свой набор файлов.
		// 0		// печать координат атомов из входного файла
		// 0 		// печать координат всех размноженных атомов (0 - нет, 1 - да)
		// 1 		// печать координат катионов, попавших в 2-ю координационную сферу катиона
		// 0		// печать координат катионов, попавших в 1-ю координационную сферу аниона
		// 0 		// печать анионов  ( в строчку), попавших в 1-ю координационную сферу основного катиона
		// 0 		// печать катионов ( в строчку), попавших в 1-ю координационную сферу аниона
		// 1		// печать минимальных значений хи-квадрат    
		// 1		// печать распределения вероятности          
		// 1		// печать координат конфигурации катионов    
		// 1 		// печать координат итоговой конфигурации    
		// 1 		// печать данных для GULP 
		// 1 		// график вероятностей для лучшего распределения и теоретического 

Output:
10		// границы χ² для вывода %	
100		// выводить каждый n-ый, попавший в границы
0		// печать координат атомов из входного файла
1 		// печать координат всех размноженных атомов (0 - нет, 1 - да)
1		// печать координат катионов, попавших в 2-ю координационную сферу катиона
1		// печать координат катионов, попавших в 1-ю координационную сферу аниона
1		// печать анионов  (в строчку), попавших в 1-ю координационную сферу основного катиона
1		// печать катионов (в строчку), попавших в 1-ю координационную сферу аниона
1		// печать минимальных значений хи-квадрат    
1		// печать распределения вероятности          
1		// печать координат конфигурации катионов    
1		// печать координат итоговой конфигурации    
1		// печать данных для GULP        
1		// график вероятностей для лучшего распределения и теоретического         